
@{
    ViewBag.Title = "MarkAttendance";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="~/assets/css/styleSheet1.css" rel="stylesheet" />
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-12">
                <h1 class="m-0">Attendance</h1>
            </div><!-- /.col -->
            <!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <div class="container-fluid">
                            <div class="row align-items-center">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="dropdown">
                                            <label for="attendanceDate"></label>
                                            <select name="semesterFrom" class="form-control" onchange="filterStudentsBySemester(this.value)">
                                                <option selected>Select Semester</option>
                                                <option value="Semester 1">Semester 1</option>
                                                <option value="Semester 2">Semester 2</option>
                                                <option value="Semester 3">Semester 3</option>
                                                <option value="Semester 4">Semester 4</option>
                                            </select>
                                        </div>
                                        <div class="mx-2"></div> <!-- Add horizontal margin between the dropdown button and the input -->
                                        <div class="dropdown">
                                            <label for="attendanceDate"></label>
                                            <input type="date" class="form-control" name="date" id="previousAttendanceDate" style="display: none;" min="" max="" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 form-group">
                                    <button class="btn btn-outline-info bg-info" type="submit" onclick="submitAttendance()">Submit</button>
                                </div>
                                <div class="col-md-4 form-group">
                                    <div class="filterdiv mt-2">
                                        <button id="markPreviousAttendanceBtn" class="btn btn-outline-info bg-success" type="button" onclick="togglePreviousAttendance()">Mark Previous Attendance</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        <table id="tbl" class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>S.No.</th>
                                    <th>Student Name</th>
                                    <th>
                                        <input id="btnCheckAll" type="checkbox">
                                        All Present
                                    </th>
                                    <th>
                                        <input id="btnCheckAll" type="checkbox">
                                        All Absent
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>

                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </div>
    <!-- /.container-fluid -->
</section>
<!-- /.content -->

<script>
    function filterStudentsBySemester(selectedSemester) {
        // Assuming you have an action in your controller to fetch students by semester
        $.ajax({
            url: '/school/GetStudentsBySemester',
            type: 'GET',
            data: { semester: selectedSemester },
            success: function (data) {
                // Update the table head
                var thead = $('#tbl thead');
                thead.empty(); // Clear existing head

                var headRow = '<tr>' +
                    '<th>S.No.</th>' +
                    '<th>Student Name</th>' +
                    '<th><input id="btnPresentCheckAll" type="checkbox" onclick="presentCheckAll(this)"> All Present</th>' +
                    '<th><input id="btnAbsentCheckAll" type="checkbox" onclick="absentCheckAll(this)"> All Absent</th>' +
                    '</tr>';
                thead.append(headRow);

                // Update the table body with the fetched student data
                var tbody = $('#tbl tbody');
                tbody.empty(); // Clear existing rows

                $.each(data, function (index, item) {
                    var row = '<tr>' +
                        '<td>' + (index + 1) + '</td>' +
                        '<td>' + item.student_name + '</td>' +
                        '<td><input type="checkbox" class="presentCheckbox" name="selectedPresentStudents" value="' + item.student_id + '"></td>' +
                        '<td><input type="checkbox" class="absentCheckbox" name="selectedAbsentStudents" value="' + item.student_id + '"></td>' +
                        '</tr>';
                    tbody.append(row);
                });
            },
            error: function () {
                alert('Error fetching students.');
            }
        });
    }

    function presentCheckAll(checkbox) {
        var isChecked = checkbox.checked;
        $('.presentCheckbox').prop('checked', isChecked);
        // Disable checkboxes in rows when btnAbsentCheckAll is checked
        if ($('#btnAbsentCheckAll').prop('disabled', isChecked)) {
            $('.absentCheckbox').prop('disabled', isChecked);
        }
    }

    function absentCheckAll(checkbox) {
        var isChecked = checkbox.checked;
        $('.absentCheckbox').prop('checked', isChecked);
        // Disable checkboxes in rows when btnPresentCheckAll is checked
        if ($('#btnPresentCheckAll').prop('disabled', isChecked)) {
            $('.presentCheckbox').prop('disabled', isChecked);
        }
    }

    // Submit function
    // Submit function
    function submitAttendance() {
        var dateInput = $('#previousAttendanceDate');
        var selectedDate = dateInput.val();

        // Check if the date input is visible
        if (dateInput.is(':visible') && !selectedDate) {
            // Display a Swal alert for date not selected
            Swal.fire({
                icon: 'warning',
                title: 'Warning',
                text: 'Please select a date before submitting attendance.',
            });
            return; // Exit the function if the date is not selected
        }

        var presentData = $('.presentCheckbox:checked').map(function () {
            return { student_id: $(this).val(), student_name: $(this).closest('tr').find('td:eq(1)').text(), attendance: 'Present', date: selectedDate };
        }).get();

        var absentData = $('.absentCheckbox:checked').map(function () {
            return { student_id: $(this).val(), student_name: $(this).closest('tr').find('td:eq(1)').text(), attendance: 'Absent', date: selectedDate };
        }).get();

        var combinedData = presentData.concat(absentData);

        // Assuming you have an action in your controller to handle the submission
        $.ajax({
            url: '/school/SubmitAttendance',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(combinedData),
            success: function (response) {
                if (response.Success) {
                    // Handle success with SweetAlert
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: response.Message,
                    }).then(function () {
                        // Redirect to the page after the SweetAlert is closed
                        window.location.href = '/school/MarkAttendance'; // Replace '/YourTargetPage' with the actual URL
                    });
                } else {
                    // Handle failure with warning SweetAlert
                    Swal.fire({
                        icon: 'warning',
                        title: 'Warning',
                        text: response.Message,
                    });
                }
            },
            error: function (error) {
                // Handle error with SweetAlert
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Attendance submission failed',
                });
            }
        });
    }

    function checkAttendanceQueryStatus() {
        $.ajax({
            url: '/school/CheckQueryStatusAndDateRange',
            type: 'GET',
            success: function (data) {
                var markPreviousAttendanceBtn = $('#markPreviousAttendanceBtn');
                var currentDate = new Date();

                // Check if data is undefined or not an array with at least one element
                if (Array.isArray(data) && data.length > 0 && data[0].lastUpdate) {
                    // Parse the date string into a JavaScript Date object
                    var lastUpdateDate = new Date(data[0].lastUpdate);

                    console.log('Current Date:', currentDate);
                    console.log('Last Update Date:', lastUpdateDate);

                    // Check if lastUpdateDate is a valid date
                    if (!isNaN(lastUpdateDate.getTime())) {
                        // Calculate the time difference in milliseconds
                        var timeDifference = Math.abs(currentDate.getTime() - lastUpdateDate.getTime());
                        console.log('Time Difference (ms):', timeDifference);

                        // Enable/disable the button based on the time difference
                        if (data[0].status == 1 && timeDifference <= 172800000) {
                            console.log('Enabling button');
                            markPreviousAttendanceBtn.prop('disabled', false);
                        } else {
                            console.log('Disabling button');
                            markPreviousAttendanceBtn.prop('disabled', true);
                        }
                    } else {
                        console.error('Invalid date format:', data[0].lastUpdate);
                        // If there's an error, consider disabling the button to be cautious
                        markPreviousAttendanceBtn.prop('disabled', true);
                    }
                } else {
                    console.error('Invalid or empty data:', data);
                    // If data is undefined or empty, consider disabling the button to be cautious
                    markPreviousAttendanceBtn.prop('disabled', true);
                }
            },            error: function (error) {
                console.error('Error checking status', error);
            }
        });
    }



    function togglePreviousAttendance() {
        var dateInput = $('#previousAttendanceDate');
        var markPreviousAttendanceBtn = $('#markPreviousAttendanceBtn');

        // Show the date input field when the button is clicked
        if (!markPreviousAttendanceBtn.prop('disabled')) {
            // Fetch the date range from the database using an AJAX request
            $.ajax({
                url: '/school/CheckQueryStatusAndDateRange', // Replace with your actual endpoint
                type: 'GET',
                success: function (data) {
                    // Check if the data is valid
                    if (data && data.length > 0 && data[0].fromDate && data[0].toDate) {
                        // Log the data to the console
                        console.log('Received data:', data);

                        // Convert the fromDate and toDate to valid date format
                        var fromDate = new Date(data[0].fromDate);
                        var toDate = new Date(data[0].toDate);

                        // Set the min and max attributes for the date input
                        fromDate.setDate(fromDate.getDate() + 1);
                        dateInput.attr('min', fromDate.toISOString().split('T')[0]);
                        toDate.setDate(toDate.getDate() + 1); // Increment toDate by 1 day
                        dateInput.attr('max', toDate.toISOString().split('T')[0]);

                        // Show the date input field
                        dateInput.show();
                    } else {
                        // Handle error or show a message indicating no valid date range
                        console.error('Invalid date range data:', data);
                    }
                },
                error: function (error) {
                    // Handle error if needed
                    console.error('Error fetching date range', error);
                }
            });
        }
    }
    

    // Call the function when the page loads
    $(document).ready(function () {
        // Initially hide the button and date input
        $('#markPreviousAttendanceBtn').show();
        $('#previousAttendanceDate').hide();

        // Check the status and update the button state
        checkAttendanceQueryStatus();
    });

</script>
